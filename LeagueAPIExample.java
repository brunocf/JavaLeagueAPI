package at.luuk.lolapiwrapper;

import java.util.List;
import java.util.Map;

import at.luuk.lolapiwrapper.LeagueAPI.Region;
import at.luuk.lolapiwrapper.entity.Champion;
import at.luuk.lolapiwrapper.entity.ChampionList;
import at.luuk.lolapiwrapper.entity.Game;
import at.luuk.lolapiwrapper.entity.League;
import at.luuk.lolapiwrapper.entity.MasteryPage;
import at.luuk.lolapiwrapper.entity.MasteryPages;
import at.luuk.lolapiwrapper.entity.RawStat;
import at.luuk.lolapiwrapper.entity.RecentGames;
import at.luuk.lolapiwrapper.entity.RunePage;
import at.luuk.lolapiwrapper.entity.RunePages;
import at.luuk.lolapiwrapper.entity.Summoner;
import at.luuk.lolapiwrapper.entity.Team;
import at.luuk.lolapiwrapper.LeagueAPI;

public class LeagueAPIExample {

	public static void main(String[] args) {

		// Retrieve a LeagueAPI object with your api key for a specific server
		LeagueAPI api = new LeagueAPI("YOUR-API-KEY-HERE", Region.EUW);

		// Request a summoner object generated by the Java LoL API Wrapper with
		// a given ingame name
		Summoner summoner = api.getSummoner("luuksen");

		// Print out some stuff
		if (summoner != null) {
			System.out.println(summoner.getId());
			System.out.println(summoner.getSummonerLevel());
			System.out.println(summoner.getRevisionDateStr());
			System.out.println();
		}

		// Get recent games of summoner
		RecentGames recentGames = api.getRecentGames(summoner.getId());

		// Print information of recent games
		if (recentGames != null) {
			for (Game game : recentGames.getGames()) {
				System.out.println(game.getGameType() + " " + game.getSubType());
				System.out.println("-----------------");
				for (RawStat rawStat : game.getStatistics()) {
					System.out.println(rawStat.getName() + " - " + rawStat.getValue());
				}
				System.out.println();
			}
		}
		
		// Leagues
		Map<String,League> leagues = api.getLeagues(summoner.getId());
		
		if(leagues != null) {
			System.out.println(leagues.keySet().toString());
		} else {
			System.out.println("leagues null");
		}
		
		// Test ChampionList
		ChampionList championList = api.getChampionList();
		for(Champion champ : championList.getChampions()) {
			System.out.println(champ.getName());
		}
		
		// Test Teams
		List<Team> teams = api.getTeams(summoner.getId());
		for(Team team : teams) {
			System.out.println(team.getName());
		}
		
		// Test Runes
		RunePages runePages = api.getRunePages(summoner.getId());
		for(RunePage runePage : runePages.getPages()) {
			System.out.println(runePage.getName());
		}
		
		// Test Masteries
		MasteryPages masteryPages = api.getMasteryPages(summoner.getId());
		for(MasteryPage masteryPage : masteryPages.getPages()) {
			System.out.println(masteryPage.getName());
		}
	}
}