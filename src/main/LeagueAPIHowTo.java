package at.luuk.lolapiwrapper.main;

import java.util.Map;

import at.luuk.lolapiwrapper.LeagueAPI.Region;
import at.luuk.lolapiwrapper.entity.Game;
import at.luuk.lolapiwrapper.entity.League;
import at.luuk.lolapiwrapper.entity.Leagues;
import at.luuk.lolapiwrapper.entity.RawStat;
import at.luuk.lolapiwrapper.entity.RecentGames;
import at.luuk.lolapiwrapper.entity.Summoner;
import at.luuk.lolapiwrapper.LeagueAPI;

public class LeagueAPIHowTo {

	public static void main(String[] args) {

		// d9595a32-dc5e-441a-838f-82a763b1286d

		// Retrieve a LeagueAPI object with your api key for a specific server
		LeagueAPI api = new LeagueAPI("d9595a32-dc5e-441a-838f-82a763b1286d", Region.EUW);

		// Request a summoner object generated by the Java LoL API Wrapper with
		// a given ingame name
		Summoner summoner = api.getSummoner("luuksen");

		// Print out some stuff
		if (summoner != null) {
			System.out.println(summoner.getId());
			System.out.println(summoner.getSummonerLevel());
			System.out.println(summoner.getRevisionDateStr());
			System.out.println();
		}

		// Get recent games of summoner
		RecentGames recentGames = api.getRecentGames(summoner.getId());

		// Print information of recent games
		if (recentGames != null) {
			for (Game game : recentGames.getGames()) {
				System.out.println(game.getGameType() + " " + game.getSubType());
				System.out.println("-----------------");
				for (RawStat rawStat : game.getStatistics()) {
					System.out.println(rawStat.getName() + " - " + rawStat.getValue());
				}
				System.out.println();
			}
		}
		
		Map<String,League> leagues = api.getLeagues(summoner.getId());
		
		if(leagues != null) {
			System.out.println(leagues.toString());
		} else {
			System.out.println("leagues null");
		}
	}
}